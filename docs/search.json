[
  {
    "objectID": "homework4_st558.html",
    "href": "homework4_st558.html",
    "title": "HW4_ST558_Jia Lu",
    "section": "",
    "text": "Task 1: Conceptual Questions\n\nWhat is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nA: We use lapply() to apply function to lists. lapply() also returns a list. The equivalent purrr function is map().\n\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\n\nA: lapply(my_list, function(x) cor(x, method = “kendall”))\n\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\n\nA: The main advantages of using purr functions instead of the BaseR apply family is more consistency and some helper functions.\n\n\nWhat is a side-effect function?\n\n\nA: Side-effect function modify some state but don’t naturally return the modified argument, such as print(), write_csv().\n\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nA: When you call a function, it creates temporary function environments. This is why variable in functions don’t exist outside the function.\n\n\n\nTask 2 - Writing R Functions\n\nWrite a basic function (call it getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n\n\n#write a function using the RMSE formula with additional argument in mean function to removes the NA values in the computation\ngetRMSE &lt;- function(resp, pred, ...){\n  mean &lt;- mean(sum((resp - pred)^2, ...), ...)\n  RMSE &lt;- sqrt(mean)\n  return(RMSE)\n}\n\n\nRun the following code to create some response values and predictions.\n\n\nTest the RMSE function using this data.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n#supply the above resp and pred vectors in the getRMSE function with response_vector=resp and prediction_vector=pred\ngetRMSE(resp, pred)\n\n[1] 9.581677\n\n\n\nTest the RMSE function with and without specifying the behavior to deal with missing values.\n\n\n#create a new vector by replacing the 99th and 100th element in x with NA\nx_with_na &lt;- x\nx_with_na[99:100] &lt;- NA_real_\nx_with_na\n\n  [1] 0.50747820 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n  [7] 0.27453052 0.27230507 0.61582931 0.42967153 0.65165567 0.56773775\n [13] 0.11350898 0.59592531 0.35804998 0.42880942 0.05190332 0.26417767\n [19] 0.39879073 0.83613414 0.86472123 0.61535242 0.77510990 0.35556869\n [25] 0.40584997 0.70664691 0.83828767 0.23958913 0.77077153 0.35589774\n [31] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n [37] 0.82265258 0.95465365 0.68544451 0.50050323 0.27548386 0.22890394\n [43] 0.01443391 0.72896456 0.24988047 0.16118328 0.01704265 0.48610035\n [49] 0.10290017 0.80154700 0.35432806 0.93643254 0.24586639 0.47314146\n [55] 0.19156087 0.58322197 0.45947319 0.46743405 0.39983256 0.50528560\n [61] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n [67] 0.57335645 0.44750805 0.08380201 0.21913855 0.07557029 0.53442678\n [73] 0.64135658 0.52573932 0.03928139 0.54585984 0.37276310 0.96130241\n [79] 0.25734157 0.20795168 0.86138244 0.46439198 0.22286743 0.62354960\n [85] 0.20364770 0.01967341 0.79799301 0.27431890 0.16660910 0.17015172\n [91] 0.48850594 0.71140908 0.59193492 0.51715688 0.38162769 0.83477833\n [97] 0.24900805 0.54060103         NA         NA\n\n#calculate respective response and prediction value with x_with_na\nresp &lt;- 3 + 10*x_with_na + rnorm(n)\npred &lt;- predict(lm(resp ~ x_with_na), data.frame(x_with_na))\n\n#supply the getRMSE function without or with specifying the behavior to delete NA values and test on the response and prediction values with x2 which has two NA values\n#it returns NA when supplying the getRMSE function without specifying na.rm argument\ngetRMSE(resp, pred)\n\n[1] NA\n\n#it returns the calculated value when supplying the getRMSE function with na.rm=TRUE\ngetRMSE(resp, pred, na.rm = TRUE)\n\n[1] 9.285177\n\n\n\nWrite a function called getMAE() that follows the specifications of the getRMSE() function.\n\n\ngetMAE &lt;- function(resp, pred, ...){\n  MAE &lt;- mean(sum(abs(resp - pred), ...), ...)\n  return(MAE)\n}\n\n\nRun the following code to create some response values and predictions.\n\n\nTest the MAE function using this data.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n#supply the above resp and pred vectors in the getMAE function with response_vector=resp and prediction_vector=pred\ngetMAE(resp, pred)\n\n[1] 81.55776\n\n\n\nTest the MAE function with and without specifying the behavior to deal with missing values.\n\n\n#create a new vector by replacing the 99th and 100th element in x with NA\nx_with_na &lt;- x\nx_with_na[99:100] &lt;- NA_real_\nx_with_na\n\n  [1] 0.50747820 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n  [7] 0.27453052 0.27230507 0.61582931 0.42967153 0.65165567 0.56773775\n [13] 0.11350898 0.59592531 0.35804998 0.42880942 0.05190332 0.26417767\n [19] 0.39879073 0.83613414 0.86472123 0.61535242 0.77510990 0.35556869\n [25] 0.40584997 0.70664691 0.83828767 0.23958913 0.77077153 0.35589774\n [31] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n [37] 0.82265258 0.95465365 0.68544451 0.50050323 0.27548386 0.22890394\n [43] 0.01443391 0.72896456 0.24988047 0.16118328 0.01704265 0.48610035\n [49] 0.10290017 0.80154700 0.35432806 0.93643254 0.24586639 0.47314146\n [55] 0.19156087 0.58322197 0.45947319 0.46743405 0.39983256 0.50528560\n [61] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n [67] 0.57335645 0.44750805 0.08380201 0.21913855 0.07557029 0.53442678\n [73] 0.64135658 0.52573932 0.03928139 0.54585984 0.37276310 0.96130241\n [79] 0.25734157 0.20795168 0.86138244 0.46439198 0.22286743 0.62354960\n [85] 0.20364770 0.01967341 0.79799301 0.27431890 0.16660910 0.17015172\n [91] 0.48850594 0.71140908 0.59193492 0.51715688 0.38162769 0.83477833\n [97] 0.24900805 0.54060103         NA         NA\n\n#calculate respective response and prediction value with x_with_na\nresp &lt;- 3 + 10*x_with_na + rnorm(n)\npred &lt;- predict(lm(resp ~ x_with_na), data.frame(x_with_na))\n#supply the getMAE function without or with specifying the behavior to delete NA values and test on the response and prediction values with x2 which has two NA values\n#it returns NA when supplying the getRMSE function without specifying na.rm argument\ngetMAE(resp, pred)\n\n[1] NA\n\n#it returns the calculated value when supplying the getMAE function with na.rm=TRUE\ngetMAE(resp, pred, na.rm = TRUE)\n\n[1] 76.86564\n\n\n\nCreate a wrapper function that can be used to get either or both metrics returned with a single function call.\n\n\nwrapper &lt;- function(resp, pred, metrics, ...){\n  if (!is.vector(resp) | !is.atomic(resp) | !is.numeric(resp) | !is.vector(pred) | !is.atomic(pred) | !is.numeric(pred)) {\n    stop(\"Not a vector or not atomic or not numeric my friend\")\n  } else if (metrics == \"RMSE\"){\n    RMSE &lt;- getRMSE(resp, pred, ...)\n    attributes(RMSE)$names &lt;- \"RMSE\"\n    return(RMSE)\n    \n  } else if (metrics == \"MAE\") {\n    MAE &lt;- getMAE(resp, pred, ...)\n    attributes(MAE)$names &lt;- \"MAE\"\n    return(MAE)\n  } else if (metrics == \"both\"){\n    RMSE &lt;- getRMSE(resp, pred, ...)\n    attributes(RMSE)$names &lt;- \"RMSE\"\n    MAE &lt;- getMAE(resp, pred, ...)\n    attributes(MAE)$names &lt;- \"MAE\"\n    return(list(RMSE, MAE))\n  }\n}\n\n\nRun the following code to create some response values and predictions.\n\n\nTest the new function using this data.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n#call the wrapper function with metrics = \"RMSE\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"RMSE\")\n\n    RMSE \n9.581677 \n\n#call the wrapper function with metrics = \"MAE\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"MAE\")\n\n     MAE \n81.55776 \n\n#call the wrapper function with metrics = \"both\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"both\")\n\n[[1]]\n    RMSE \n9.581677 \n\n[[2]]\n     MAE \n81.55776 \n\n\n\nRepeat with replacing two of the response values with missing values (NA_real_).\n\n\n#create a new vector by replacing the 99th and 100th element in x with NA\nx_with_na &lt;- x\nx_with_na[99:100] &lt;- NA_real_\nx_with_na\n\n  [1] 0.50747820 0.30676851 0.42690767 0.69310208 0.08513597 0.22543662\n  [7] 0.27453052 0.27230507 0.61582931 0.42967153 0.65165567 0.56773775\n [13] 0.11350898 0.59592531 0.35804998 0.42880942 0.05190332 0.26417767\n [19] 0.39879073 0.83613414 0.86472123 0.61535242 0.77510990 0.35556869\n [25] 0.40584997 0.70664691 0.83828767 0.23958913 0.77077153 0.35589774\n [31] 0.53559704 0.09308813 0.16980304 0.89983245 0.42263761 0.74774647\n [37] 0.82265258 0.95465365 0.68544451 0.50050323 0.27548386 0.22890394\n [43] 0.01443391 0.72896456 0.24988047 0.16118328 0.01704265 0.48610035\n [49] 0.10290017 0.80154700 0.35432806 0.93643254 0.24586639 0.47314146\n [55] 0.19156087 0.58322197 0.45947319 0.46743405 0.39983256 0.50528560\n [61] 0.03188816 0.11446759 0.46893548 0.39698674 0.83361919 0.76112174\n [67] 0.57335645 0.44750805 0.08380201 0.21913855 0.07557029 0.53442678\n [73] 0.64135658 0.52573932 0.03928139 0.54585984 0.37276310 0.96130241\n [79] 0.25734157 0.20795168 0.86138244 0.46439198 0.22286743 0.62354960\n [85] 0.20364770 0.01967341 0.79799301 0.27431890 0.16660910 0.17015172\n [91] 0.48850594 0.71140908 0.59193492 0.51715688 0.38162769 0.83477833\n [97] 0.24900805 0.54060103         NA         NA\n\n#calculate respective response and prediction value with x_with_na\nresp &lt;- 3 + 10*x_with_na + rnorm(n)\npred &lt;- predict(lm(resp ~ x_with_na), data.frame(x_with_na))\n#call the wrapper function with metrics = \"RMSE\" without specifying na.rm argument and the output NA is generated\nwrapper(resp, pred, metrics = \"RMSE\")\n\nRMSE \n  NA \n\n#call the wrapper function with metrics = \"MAE\" without specifying na.rm argument and the output NA is generated\nwrapper(resp, pred, metrics = \"MAE\")\n\nMAE \n NA \n\n#call the wrapper function with metrics = \"both\" without specifying na.rm argument and the output NA is generated\nwrapper(resp, pred, metrics = \"both\")\n\n[[1]]\nRMSE \n  NA \n\n[[2]]\nMAE \n NA \n\n#call the wrapper function with metrics = \"RMSE\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"RMSE\", na.rm = TRUE)\n\n    RMSE \n9.285177 \n\n#call the wrapper function with metrics = \"MAE\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"MAE\", na.rm = TRUE)\n\n     MAE \n76.86564 \n\n#call the wrapper function with metrics = \"both\" and the output is generated according to the request\nwrapper(resp, pred, metrics = \"both\", na.rm = TRUE)\n\n[[1]]\n    RMSE \n9.285177 \n\n[[2]]\n     MAE \n76.86564 \n\n\n\nFinally, I tested my function by passing it data frames. I stored both resp and pred vectors as data frames, and passed them into this function. It shows the error message I wrote in the function in the output, suggesting that the incorrect data were passed on.\n\n\nresp_df &lt;- as.data.frame(resp)\npred_df &lt;- as.data.frame(pred)\n#call the wrapper function with metrics = \"RMSE\" without specifying na.rm argument and the output shows the error message\nwrapper(resp_df, pred_df, metrics = \"RMSE\")\n\nError in wrapper(resp_df, pred_df, metrics = \"RMSE\"): Not a vector or not atomic or not numeric my friend\n\n\n\n#call the wrapper function with metrics = \"MAE\" without specifying na.rm argument and the output shows the error message\nwrapper(resp_df, pred_df, metrics = \"MAE\")\n\nError in wrapper(resp_df, pred_df, metrics = \"MAE\"): Not a vector or not atomic or not numeric my friend\n\n\n\n#call the wrapper function with metrics = \"both\" without specifying na.rm argument and the output shows the error message\nwrapper(resp_df, pred_df, metrics = \"both\")\n\nError in wrapper(resp_df, pred_df, metrics = \"both\"): Not a vector or not atomic or not numeric my friend\n\n\n\n\nTask 3 - Querying an API and a Tidy-Style Function\n\nAfter registered for the website newsapi.org, I got a key for this website. I dissected the URL into several parts: base URL, subject query, time period to search from, and the api key supplied. I then supplemented the subject query and time period that I am interested in, as well as the api key that I have. Then I used GET() from the httr package to return information about this topic and stored the result as news_return.\n\n\nlibrary(jsonlite)\n\nbase_URL &lt;- \"https://newsapi.org/v2/everything\"\n\nURL_code_subject_query &lt;- \"?q=\"\nURL_code_time_period &lt;- \"&from=\"\nURL_code_api_key &lt;- \"&apikey=\"\n\nsubject_query &lt;- \"Jerome%20Powell\"\ntime_period &lt;- \"2024-06-20\"\napi_key &lt;- \"0eca322394b24a1786944625148c3767\"\n\nURL &lt;- paste0(base_URL, URL_code_subject_query, subject_query, URL_code_time_period, time_period, URL_code_api_key, api_key)\nURL\n\n[1] \"https://newsapi.org/v2/everything?q=Jerome%20Powell&from=2024-06-20&apikey=0eca322394b24a1786944625148c3767\"\n\nnews_return &lt;- httr::GET(URL)\n\n\nI used str() to see the structure of news_return I then parsed news_return with the data frame news_return$content and checked the structure of it as well. I found that the 3rd element of this list, articles, has the actual article information in it. Therefore, I stored all the information from it into as a tibble using tidyverse package.\n\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nstr(news_return, max.level = 1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/everything?q=Jerome%20Powell&from=2024-06-20&apikey=0eca322394b24a1786944625148c3767\"\n $ status_code: int 200\n $ headers    :List of 14\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:19974] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-06-24 21:40:50\"\n $ times      : Named num [1:6] 0 0.00488 0.01897 0.06458 0.31483 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\nparsed_news &lt;- fromJSON(rawToChar((news_return$content)))\nstr(parsed_news)\n\nList of 3\n $ status      : chr \"ok\"\n $ totalResults: int 23\n $ articles    :'data.frame':   23 obs. of  8 variables:\n  ..$ source     :'data.frame': 23 obs. of  2 variables:\n  .. ..$ id  : chr [1:23] NA \"focus\" \"focus\" NA ...\n  .. ..$ name: chr [1:23] \"Forbes\" \"Focus\" \"Focus\" \"Forbes\" ...\n  ..$ author     : chr [1:23] \"Simon Moore, Senior Contributor, \\n Simon Moore, Senior Contributor\\n https://www.forbes.com/sites/simonmoore/\" \"FOCUS online\" \"FOCUS online\" \"Simon Moore, Senior Contributor, \\n Simon Moore, Senior Contributor\\n https://www.forbes.com/sites/simonmoore/\" ...\n  ..$ title      : chr [1:23] \"What To Expect From The Fed On Interest Rates For The Rest Of 2024\" \"Inflation schwächer - Schweizerische Nationalbank senkt erneut den Leitzins\" \"Inflation schwächer - Schweizerische Nationalbank senkt erneut den Leitzins\" \"What To Expect From June’s Inflation Data\" ...\n  ..$ description: chr [1:23] \"The Federal Reserve Open Market Committee is expected to start to cut rates in 2024, perhaps starting in Septem\"| __truncated__ \"Die Schweizerische Nationalbank senkt ihre Leitzinsen zum zweiten Mal in diesem Jahr. Grund dafür ist die sinkende Inflation.\" \"Die Schweizerische Nationalbank senkt ihre Leitzinsen zum zweiten Mal in diesem Jahr. Grund dafür ist die sinkende Inflation.\" \"June's CPI inflation data is expected to lend support to anticipated interest rate cuts in 2024 and beyond.\" ...\n  ..$ url        : chr [1:23] \"https://www.forbes.com/sites/simonmoore/2024/06/22/what-to-expect-from-the-fed-on-interest-rates-for-the-rest-of-2024/\" \"https://www.focus.de/finanzen/boerse/inflation-schwaecher-schweizerische-nationalbank-senkt-erneut-den-leitzins\"| __truncated__ \"https://www.focus.de/finanzen/boerse/inflation-schwaecher-nur-noch-1-25-prozent-schweizerische-nationalbank-sen\"| __truncated__ \"https://www.forbes.com/sites/simonmoore/2024/06/23/what-to-expect-from-junes-inflation-data/\" ...\n  ..$ urlToImage : chr [1:23] \"https://imageio.forbes.com/specials-images/imageserve/667649d0f37f575b4de44718/0x0.jpg?format=jpg&height=900&wi\"| __truncated__ \"https://p6.focus.de/img/fotos/id_24207339/schweiz-und-flagge.jpg?im=Crop%3D%280%2C67%2C1600%2C800%29%3BResize%3\"| __truncated__ \"https://p6.focus.de/img/fotos/id_24207339/schweiz-und-flagge.jpg?im=Crop%3D%280%2C67%2C1600%2C800%29%3BResize%3\"| __truncated__ \"https://imageio.forbes.com/specials-images/imageserve/66768d6a4410b6b68b1d928d/0x0.jpg?format=jpg&height=900&wi\"| __truncated__ ...\n  ..$ publishedAt: chr [1:23] \"2024-06-22T04:26:54Z\" \"2024-06-20T11:49:11Z\" \"2024-06-20T11:49:11Z\" \"2024-06-23T10:51:44Z\" ...\n  ..$ content    : chr [1:23] \"Federal Reserve Chairman Jerome Powell is shows on a screen behind a trader on the floor of the New ... [+] Yor\"| __truncated__ \"Die Schweizerische Nationalbank senkt ihre Leitzinsen zum zweiten Mal in diesem Jahr. Grund dafür ist die sinke\"| __truncated__ \"Die Schweizerische Nationalbank senkt ihre Leitzinsen zum zweiten Mal in diesem Jahr. Grund dafür ist die sinke\"| __truncated__ \"Jerome Powell, chairman of the US Federal Reserve, during a news conference following a Federal Open ... [+] Ma\"| __truncated__ ...\n\n#the first column of parsed_news$articles is a list column\ntypeof(parsed_news$articles[,1])\n\n[1] \"list\"\n\n#this list column contains two element \"id\" and \"name\"\nstr(parsed_news$articles$source)\n\n'data.frame':   23 obs. of  2 variables:\n $ id  : chr  NA \"focus\" \"focus\" NA ...\n $ name: chr  \"Forbes\" \"Focus\" \"Focus\" \"Forbes\" ...\n\nnews_articles &lt;- as_tibble(parsed_news$articles)\n\n#create new two columns id and name from source and delete the source column\nnews_articles &lt;- news_articles |&gt;\n  mutate(id = news_articles$source$id,\n         name = news_articles$source$name) |&gt;\n  select(id, name, everything(), -source)\nnews_articles\n\n# A tibble: 23 × 9\n   id    name      author title description url   urlToImage publishedAt content\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;  Forbes    \"Simo… What… The Federa… http… https://i… 2024-06-22… \"Feder…\n 2 focus Focus     \"FOCU… Infl… Die Schwei… http… https://p… 2024-06-20… \"Die S…\n 3 focus Focus     \"FOCU… Infl… Die Schwei… http… https://p… 2024-06-20… \"Die S…\n 4 &lt;NA&gt;  Forbes    \"Simo… What… June's CPI… http… https://i… 2024-06-23… \"Jerom…\n 5 &lt;NA&gt;  Yahoo En… \"Edwa… Pair… (Bloomberg… http… https://m… 2024-06-20… \"(Bloo…\n 6 &lt;NA&gt;  Yahoo En… \"Affa… Carn… We recentl… http… https://s… 2024-06-22… \"We re…\n 7 &lt;NA&gt;  Yahoo En… \"Affa… What… We recentl… http… https://s… 2024-06-22… \"We re…\n 8 &lt;NA&gt;  Yahoo En… \"Affa… What… We recentl… http… https://s… 2024-06-22… \"We re…\n 9 &lt;NA&gt;  Yahoo En… \"Affa… Blue… We recentl… http… https://s… 2024-06-22… \"We re…\n10 &lt;NA&gt;  Yahoo En… \"Affa… Did … We recentl… http… https://s… 2024-06-22… \"We re…\n# ℹ 13 more rows\n\n\n\nI wrote a quick function that allows the user to easily query this API. The inputs to the function are the subject to search for (string), a time period to search from, and an API.\n\n\nquery_API &lt;- function(subject_query, time_period, api_key){\n  library(jsonlite)\n  library(tidyverse)\n\n#create a URL to query the API  \n  base_URL &lt;- \"https://newsapi.org/v2/everything\"\n  \n  URL_code_subject_query &lt;- \"?q=\"\n  URL_code_time_period &lt;- \"&from=\"\n  URL_code_api_key &lt;- \"&apikey=\"\n  \n  URL &lt;- paste0(base_URL, URL_code_subject_query, subject_query, URL_code_time_period, time_period, URL_code_api_key, api_key)\n\n#read in and store data with jsonlite and tidyverse packages\n  news_return &lt;- httr::GET(URL)\n  parsed_news &lt;- fromJSON(rawToChar((news_return$content)))\n  news_articles &lt;- as_tibble(parsed_news$articles)\n\n#construct a new tibble with columns id and name and everything else excluding the source column\n  news_articles &lt;- news_articles |&gt;\n    mutate(id = news_articles$source$id,\n           name = news_articles$source$name) |&gt;\n    select(id, name, everything(), -source)\n  news_articles\n}\n#I then used this function twice with different query subjects and time period to search, but unique api key. \n#here, I supplied subject_query=\"federal%20reserve\", time_period=\"2024-06-23\", api_key=\"0eca322394b24a1786944625148c3767\" \nquery_API(\"federal%20reserve\", \"2024-05-24\", \"0eca322394b24a1786944625148c3767\")\n\n# A tibble: 100 × 9\n   id        name  author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      NPR   Scott… \"The… \"The Feder… http… https://n… 2024-06-12… \"The F…\n 2 business… Busi… Matth… \"Hig… \"\\\"This is… http… https://i… 2024-06-04… \"An FD…\n 3 business… Busi… Filip… \"Why… \"Mortgage … http… https://i… 2024-05-26… \"Getty…\n 4 business… Busi… Ayele… \"The… \"The Feder… http… https://i… 2024-06-12… \"U.S. …\n 5 business… Busi… Ayele… \"The… \"The boomi… http… https://i… 2024-06-11… \"Feder…\n 6 &lt;NA&gt;      Yaho… Jason… \"AI … \"According… http… https://s… 2024-06-22… \"More …\n 7 &lt;NA&gt;      NPR   Daria… \"Wha… \"A vexing … http… https://m… 2024-06-14… \"A vex…\n 8 &lt;NA&gt;      Yaho… Micha… \"NY … \"The U.S. … http… https://m… 2024-06-10… \"By Mi…\n 9 business… Busi… Laure… \"Ame… \"Parents w… http… https://i… 2024-05-26… \"The p…\n10 &lt;NA&gt;      Yaho… Jenni… \"Fed… \"The Feder… http… https://s… 2024-06-12… \"The F…\n# ℹ 90 more rows\n\n#here, I supplied subject_query=\"quantitative%20tightening\", time_period= \"2024-06-10\", api_key=\"0eca322394b24a1786944625148c3767\" \nquery_API(\"quantitative%20tightening\", \"2024-06-10\", \"0eca322394b24a1786944625148c3767\")\n\n# A tibble: 65 × 9\n   id      name    author title description url   urlToImage publishedAt content\n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;    Yahoo … Leika… Expl… \"The Bank … http… https://m… 2024-06-13… \"By Le…\n 2 &lt;NA&gt;    The Ja… Toru … BOJ … \"A paring … http… https://w… 2024-06-11… \"The B…\n 3 &lt;NA&gt;    CNA     &lt;NA&gt;   Expl… \"TOKYO : T… http… https://o… 2024-06-13… \"TOKYO…\n 4 &lt;NA&gt;    CNA     &lt;NA&gt;   Econ… \"TOKYO : E… http… https://o… 2024-06-17… \"TOKYO…\n 5 fortune Fortune Will … The … \"Bank of A… http… https://f… 2024-06-17… \"Stock…\n 6 &lt;NA&gt;    Yahoo … Toru … BOJ … \"(Bloomber… http… https://s… 2024-06-10… \"(Bloo…\n 7 &lt;NA&gt;    Yahoo … Toru … BOJ … \"(Bloomber… http… https://s… 2024-06-14… \"(Bloo…\n 8 &lt;NA&gt;    Yahoo … Jessi… Ever… \"(Bloomber… http… https://m… 2024-06-16… \"(Bloo…\n 9 &lt;NA&gt;    Market… &lt;NA&gt;   What… \"(marketsc… http… https://w… 2024-06-13… \"TOKYO…\n10 &lt;NA&gt;    Invest… Reute… Expl… \"Explainer… http… https://i… 2024-06-13… \"By Le…\n# ℹ 55 more rows"
  }
]